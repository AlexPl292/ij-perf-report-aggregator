// Code generated by qtc from "json.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line pkg/server/json.qtpl:1
package server

//line pkg/server/json.qtpl:1
import "github.com/JetBrains/ij-perf-report-aggregator/pkg/analyzer"

//line pkg/server/json.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line pkg/server/json.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line pkg/server/json.qtpl:4
func streamhttpError(qw422016 *qt422016.Writer, error *HttpError) {
//line pkg/server/json.qtpl:4
	qw422016.N().S(`{"error":`)
//line pkg/server/json.qtpl:6
	qw422016.N().Q(error.Message)
//line pkg/server/json.qtpl:6
	qw422016.N().S(`}`)
//line pkg/server/json.qtpl:8
}

//line pkg/server/json.qtpl:8
func writehttpError(qq422016 qtio422016.Writer, error *HttpError) {
//line pkg/server/json.qtpl:8
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:8
	streamhttpError(qw422016, error)
//line pkg/server/json.qtpl:8
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:8
}

//line pkg/server/json.qtpl:8
func httpError(error *HttpError) string {
//line pkg/server/json.qtpl:8
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:8
	writehttpError(qb422016, error)
//line pkg/server/json.qtpl:8
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:8
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:8
	return qs422016
//line pkg/server/json.qtpl:8
}

//line pkg/server/json.qtpl:10
func StreamGroupedMetricList(qw422016 *qt422016.Writer, list []MedianResult) {
//line pkg/server/json.qtpl:10
	qw422016.N().S(`{"groupNames": [`)
//line pkg/server/json.qtpl:13
	if len(list) > 0 {
//line pkg/server/json.qtpl:14
		for i, value := range list[0].groupedValues {
//line pkg/server/json.qtpl:15
			if i != 0 {
//line pkg/server/json.qtpl:15
				qw422016.N().S(`,`)
//line pkg/server/json.qtpl:15
			}
//line pkg/server/json.qtpl:15
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:16
			qw422016.N().S(value.group)
//line pkg/server/json.qtpl:16
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:17
		}
//line pkg/server/json.qtpl:18
	}
//line pkg/server/json.qtpl:18
	qw422016.N().S(`],"data": [`)
//line pkg/server/json.qtpl:21
	for i, item := range list {
//line pkg/server/json.qtpl:22
		if i != 0 {
//line pkg/server/json.qtpl:22
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:22
		}
//line pkg/server/json.qtpl:22
		qw422016.N().S(`{`)
//line pkg/server/json.qtpl:24
		for _, value := range item.groupedValues {
//line pkg/server/json.qtpl:24
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:25
			qw422016.N().S(value.group)
//line pkg/server/json.qtpl:25
			qw422016.N().S(`":`)
//line pkg/server/json.qtpl:25
			qw422016.N().D(value.value)
//line pkg/server/json.qtpl:25
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:26
		}
//line pkg/server/json.qtpl:29
		qw422016.N().S(`"metric":`)
//line pkg/server/json.qtpl:30
		qw422016.N().Q(item.metricName)
//line pkg/server/json.qtpl:30
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:32
	}
//line pkg/server/json.qtpl:32
	qw422016.N().S(`]}`)
//line pkg/server/json.qtpl:35
}

//line pkg/server/json.qtpl:35
func WriteGroupedMetricList(qq422016 qtio422016.Writer, list []MedianResult) {
//line pkg/server/json.qtpl:35
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:35
	StreamGroupedMetricList(qw422016, list)
//line pkg/server/json.qtpl:35
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:35
}

//line pkg/server/json.qtpl:35
func GroupedMetricList(list []MedianResult) string {
//line pkg/server/json.qtpl:35
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:35
	WriteGroupedMetricList(qb422016, list)
//line pkg/server/json.qtpl:35
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:35
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:35
	return qs422016
//line pkg/server/json.qtpl:35
}

//line pkg/server/json.qtpl:37
func StreamInfo(qw422016 *qt422016.Writer, productNames []string, groupNames []string, metrics []*analyzer.Metric, productNameToMachineNames map[string]map[string]*MachineGroup) {
//line pkg/server/json.qtpl:37
	qw422016.N().S(`{"productNames":`)
//line pkg/server/json.qtpl:39
	streamsafeStringList(qw422016, productNames)
//line pkg/server/json.qtpl:39
	qw422016.N().S(`,"metrics": [`)
//line pkg/server/json.qtpl:41
	for i, metric := range metrics {
//line pkg/server/json.qtpl:42
		if i != 0 {
//line pkg/server/json.qtpl:42
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:42
		}
//line pkg/server/json.qtpl:42
		qw422016.N().S(`{"name":`)
//line pkg/server/json.qtpl:44
		qw422016.N().Q(metric.Name)
//line pkg/server/json.qtpl:45
		if metric.IsInstant {
//line pkg/server/json.qtpl:45
			qw422016.N().S(`, "isInstant": true`)
//line pkg/server/json.qtpl:47
		}
//line pkg/server/json.qtpl:47
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:49
	}
//line pkg/server/json.qtpl:49
	qw422016.N().S(`],"productToMachine": {`)
//line pkg/server/json.qtpl:52
	for i, product := range productNames {
//line pkg/server/json.qtpl:53
		if i != 0 {
//line pkg/server/json.qtpl:53
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:53
		}
//line pkg/server/json.qtpl:53
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:54
		qw422016.N().S(product)
//line pkg/server/json.qtpl:54
		qw422016.N().S(`":`)
//line pkg/server/json.qtpl:54
		streamwriteMachineGroups(qw422016, groupNames, productNameToMachineNames[product])
//line pkg/server/json.qtpl:55
	}
//line pkg/server/json.qtpl:55
	qw422016.N().S(`}}`)
//line pkg/server/json.qtpl:58
}

//line pkg/server/json.qtpl:58
func WriteInfo(qq422016 qtio422016.Writer, productNames []string, groupNames []string, metrics []*analyzer.Metric, productNameToMachineNames map[string]map[string]*MachineGroup) {
//line pkg/server/json.qtpl:58
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:58
	StreamInfo(qw422016, productNames, groupNames, metrics, productNameToMachineNames)
//line pkg/server/json.qtpl:58
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:58
}

//line pkg/server/json.qtpl:58
func Info(productNames []string, groupNames []string, metrics []*analyzer.Metric, productNameToMachineNames map[string]map[string]*MachineGroup) string {
//line pkg/server/json.qtpl:58
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:58
	WriteInfo(qb422016, productNames, groupNames, metrics, productNameToMachineNames)
//line pkg/server/json.qtpl:58
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:58
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:58
	return qs422016
//line pkg/server/json.qtpl:58
}

//line pkg/server/json.qtpl:60
func streamsafeStringList(qw422016 *qt422016.Writer, list []string) {
//line pkg/server/json.qtpl:60
	qw422016.N().S(`[`)
//line pkg/server/json.qtpl:62
	for i, v := range list {
//line pkg/server/json.qtpl:63
		if i != 0 {
//line pkg/server/json.qtpl:63
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:63
		}
//line pkg/server/json.qtpl:63
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:64
		qw422016.N().S(v)
//line pkg/server/json.qtpl:64
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:65
	}
//line pkg/server/json.qtpl:65
	qw422016.N().S(`]`)
//line pkg/server/json.qtpl:67
}

//line pkg/server/json.qtpl:67
func writesafeStringList(qq422016 qtio422016.Writer, list []string) {
//line pkg/server/json.qtpl:67
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:67
	streamsafeStringList(qw422016, list)
//line pkg/server/json.qtpl:67
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:67
}

//line pkg/server/json.qtpl:67
func safeStringList(list []string) string {
//line pkg/server/json.qtpl:67
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:67
	writesafeStringList(qb422016, list)
//line pkg/server/json.qtpl:67
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:67
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:67
	return qs422016
//line pkg/server/json.qtpl:67
}

//line pkg/server/json.qtpl:69
func streamwriteMachineGroups(qw422016 *qt422016.Writer, groupNames []string, groups map[string]*MachineGroup) {
//line pkg/server/json.qtpl:69
	qw422016.N().S(`[`)
//line pkg/server/json.qtpl:72
	isFirst := true

//line pkg/server/json.qtpl:74
	for _, groupName := range groupNames {
//line pkg/server/json.qtpl:76
		machineGroup, ok := groups[groupName]
		if !ok {
			continue
		}

//line pkg/server/json.qtpl:82
		if !isFirst {
//line pkg/server/json.qtpl:82
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:82
		}
//line pkg/server/json.qtpl:84
		isFirst = false

//line pkg/server/json.qtpl:85
		qw422016.N().S(`{"name":`)
//line pkg/server/json.qtpl:88
		qw422016.N().Q(groupName)
//line pkg/server/json.qtpl:88
		qw422016.N().S(`,"children":`)
//line pkg/server/json.qtpl:89
		streamwriteMachineInfoList(qw422016, machineGroup.machines)
//line pkg/server/json.qtpl:89
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:91
	}
//line pkg/server/json.qtpl:91
	qw422016.N().S(`]`)
//line pkg/server/json.qtpl:93
}

//line pkg/server/json.qtpl:93
func writewriteMachineGroups(qq422016 qtio422016.Writer, groupNames []string, groups map[string]*MachineGroup) {
//line pkg/server/json.qtpl:93
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:93
	streamwriteMachineGroups(qw422016, groupNames, groups)
//line pkg/server/json.qtpl:93
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:93
}

//line pkg/server/json.qtpl:93
func writeMachineGroups(groupNames []string, groups map[string]*MachineGroup) string {
//line pkg/server/json.qtpl:93
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:93
	writewriteMachineGroups(qb422016, groupNames, groups)
//line pkg/server/json.qtpl:93
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:93
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:93
	return qs422016
//line pkg/server/json.qtpl:93
}

//line pkg/server/json.qtpl:95
func streamwriteMachineInfoList(qw422016 *qt422016.Writer, machines []string) {
//line pkg/server/json.qtpl:95
	qw422016.N().S(`[`)
//line pkg/server/json.qtpl:97
	for i, machine := range machines {
//line pkg/server/json.qtpl:98
		if i != 0 {
//line pkg/server/json.qtpl:98
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:98
		}
//line pkg/server/json.qtpl:98
		qw422016.N().S(`{"name":`)
//line pkg/server/json.qtpl:100
		qw422016.N().Q(machine)
//line pkg/server/json.qtpl:100
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:102
	}
//line pkg/server/json.qtpl:102
	qw422016.N().S(`]`)
//line pkg/server/json.qtpl:104
}

//line pkg/server/json.qtpl:104
func writewriteMachineInfoList(qq422016 qtio422016.Writer, machines []string) {
//line pkg/server/json.qtpl:104
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:104
	streamwriteMachineInfoList(qw422016, machines)
//line pkg/server/json.qtpl:104
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:104
}

//line pkg/server/json.qtpl:104
func writeMachineInfoList(machines []string) string {
//line pkg/server/json.qtpl:104
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:104
	writewriteMachineInfoList(qb422016, machines)
//line pkg/server/json.qtpl:104
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:104
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:104
	return qs422016
//line pkg/server/json.qtpl:104
}
