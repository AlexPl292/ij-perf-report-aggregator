// Code generated by qtc from "json.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line pkg/server/json.qtpl:1
package server

//line pkg/server/json.qtpl:1
import "github.com/bvinc/go-sqlite-lite/sqlite3"

//line pkg/server/json.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line pkg/server/json.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line pkg/server/json.qtpl:4
func StreamGroupedMetricList(qw422016 *qt422016.Writer, list []*MedianResult) {
//line pkg/server/json.qtpl:4
	qw422016.N().S(`{"groupNames": [`)
//line pkg/server/json.qtpl:7
	if len(list) > 0 {
//line pkg/server/json.qtpl:8
		for i, value := range list[0].buildToValue {
//line pkg/server/json.qtpl:9
			if i != 0 {
//line pkg/server/json.qtpl:9
				qw422016.N().S(`,`)
//line pkg/server/json.qtpl:9
			}
//line pkg/server/json.qtpl:9
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:10
			qw422016.N().D(value.buildC1)
//line pkg/server/json.qtpl:10
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:11
		}
//line pkg/server/json.qtpl:12
	}
//line pkg/server/json.qtpl:12
	qw422016.N().S(`],"data": [`)
//line pkg/server/json.qtpl:15
	for i, item := range list {
//line pkg/server/json.qtpl:16
		if i != 0 {
//line pkg/server/json.qtpl:16
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:16
		}
//line pkg/server/json.qtpl:16
		qw422016.N().S(`{`)
//line pkg/server/json.qtpl:18
		for _, value := range item.buildToValue {
//line pkg/server/json.qtpl:18
			qw422016.N().S(`"`)
//line pkg/server/json.qtpl:19
			qw422016.N().D(value.buildC1)
//line pkg/server/json.qtpl:19
			qw422016.N().S(`":`)
//line pkg/server/json.qtpl:19
			qw422016.N().D(value.value)
//line pkg/server/json.qtpl:19
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:20
		}
//line pkg/server/json.qtpl:23
		qw422016.N().S(`"metric":`)
//line pkg/server/json.qtpl:24
		qw422016.N().Q(item.metricName)
//line pkg/server/json.qtpl:24
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:26
	}
//line pkg/server/json.qtpl:26
	qw422016.N().S(`]}`)
//line pkg/server/json.qtpl:29
}

//line pkg/server/json.qtpl:29
func WriteGroupedMetricList(qq422016 qtio422016.Writer, list []*MedianResult) {
//line pkg/server/json.qtpl:29
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:29
	StreamGroupedMetricList(qw422016, list)
//line pkg/server/json.qtpl:29
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:29
}

//line pkg/server/json.qtpl:29
func GroupedMetricList(list []*MedianResult) string {
//line pkg/server/json.qtpl:29
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:29
	WriteGroupedMetricList(qb422016, list)
//line pkg/server/json.qtpl:29
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:29
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:29
	return qs422016
//line pkg/server/json.qtpl:29
}

//line pkg/server/json.qtpl:31
func StreamInfo(qw422016 *qt422016.Writer, productNames []string, essentialMetricNames []string, statement *sqlite3.Stmt, errRef *error) {
//line pkg/server/json.qtpl:31
	qw422016.N().S(`{"productNames":`)
//line pkg/server/json.qtpl:33
	streamsafeStringList(qw422016, productNames)
//line pkg/server/json.qtpl:33
	qw422016.N().S(`,`)
//line pkg/server/json.qtpl:34
	streammetricNames(qw422016, essentialMetricNames)
//line pkg/server/json.qtpl:34
	qw422016.N().S(`,"productToMachine": {`)
//line pkg/server/json.qtpl:36
	for i, product := range productNames {
//line pkg/server/json.qtpl:38
		*errRef = statement.Bind(product)
		if *errRef != nil {
			return
		}

//line pkg/server/json.qtpl:44
		if i != 0 {
//line pkg/server/json.qtpl:44
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:44
		}
//line pkg/server/json.qtpl:44
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:45
		qw422016.N().S(product)
//line pkg/server/json.qtpl:45
		qw422016.N().S(`":`)
//line pkg/server/json.qtpl:45
		streamwriteMachineInfoList(qw422016, statement, errRef)
//line pkg/server/json.qtpl:46
	}
//line pkg/server/json.qtpl:46
	qw422016.N().S(`}}`)
//line pkg/server/json.qtpl:49
}

//line pkg/server/json.qtpl:49
func WriteInfo(qq422016 qtio422016.Writer, productNames []string, essentialMetricNames []string, statement *sqlite3.Stmt, errRef *error) {
//line pkg/server/json.qtpl:49
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:49
	StreamInfo(qw422016, productNames, essentialMetricNames, statement, errRef)
//line pkg/server/json.qtpl:49
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:49
}

//line pkg/server/json.qtpl:49
func Info(productNames []string, essentialMetricNames []string, statement *sqlite3.Stmt, errRef *error) string {
//line pkg/server/json.qtpl:49
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:49
	WriteInfo(qb422016, productNames, essentialMetricNames, statement, errRef)
//line pkg/server/json.qtpl:49
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:49
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:49
	return qs422016
//line pkg/server/json.qtpl:49
}

//line pkg/server/json.qtpl:51
func streammetricNames(qw422016 *qt422016.Writer, essentialMetricNames []string) {
//line pkg/server/json.qtpl:51
	qw422016.N().S(`"durationMetricsNames": [`)
//line pkg/server/json.qtpl:53
	for _, name := range essentialMetricNames {
//line pkg/server/json.qtpl:53
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:54
		qw422016.N().S(name)
//line pkg/server/json.qtpl:54
		qw422016.N().S(`",`)
//line pkg/server/json.qtpl:55
	}
//line pkg/server/json.qtpl:55
	qw422016.N().S(`"moduleLoading"],"instantMetricsNames": ["splash"]`)
//line pkg/server/json.qtpl:61
}

//line pkg/server/json.qtpl:61
func writemetricNames(qq422016 qtio422016.Writer, essentialMetricNames []string) {
//line pkg/server/json.qtpl:61
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:61
	streammetricNames(qw422016, essentialMetricNames)
//line pkg/server/json.qtpl:61
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:61
}

//line pkg/server/json.qtpl:61
func metricNames(essentialMetricNames []string) string {
//line pkg/server/json.qtpl:61
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:61
	writemetricNames(qb422016, essentialMetricNames)
//line pkg/server/json.qtpl:61
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:61
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:61
	return qs422016
//line pkg/server/json.qtpl:61
}

//line pkg/server/json.qtpl:64
func streamsafeStringList(qw422016 *qt422016.Writer, list []string) {
//line pkg/server/json.qtpl:64
	qw422016.N().S(`[`)
//line pkg/server/json.qtpl:66
	for i, v := range list {
//line pkg/server/json.qtpl:67
		if i != 0 {
//line pkg/server/json.qtpl:67
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:67
		}
//line pkg/server/json.qtpl:67
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:68
		qw422016.N().S(v)
//line pkg/server/json.qtpl:68
		qw422016.N().S(`"`)
//line pkg/server/json.qtpl:69
	}
//line pkg/server/json.qtpl:69
	qw422016.N().S(`]`)
//line pkg/server/json.qtpl:71
}

//line pkg/server/json.qtpl:71
func writesafeStringList(qq422016 qtio422016.Writer, list []string) {
//line pkg/server/json.qtpl:71
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:71
	streamsafeStringList(qw422016, list)
//line pkg/server/json.qtpl:71
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:71
}

//line pkg/server/json.qtpl:71
func safeStringList(list []string) string {
//line pkg/server/json.qtpl:71
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:71
	writesafeStringList(qb422016, list)
//line pkg/server/json.qtpl:71
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:71
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:71
	return qs422016
//line pkg/server/json.qtpl:71
}

//line pkg/server/json.qtpl:73
func streamwriteMachineInfoList(qw422016 *qt422016.Writer, statement *sqlite3.Stmt, errRef *error) {
//line pkg/server/json.qtpl:73
	qw422016.N().S(`[`)
//line pkg/server/json.qtpl:75
	isFirstRow := true

//line pkg/server/json.qtpl:76
	for {
//line pkg/server/json.qtpl:78
		hasRow, err := statement.Step()
		if err != nil {
			*errRef = err
			return
		}

		if !hasRow {
			break
		}

		id, _, err := statement.ColumnInt(0)
		if err != nil {
			*errRef = err
			return
		}

		name, _, err := statement.ColumnRawString(1)
		if err != nil {
			*errRef = err
			return
		}

//line pkg/server/json.qtpl:101
		if isFirstRow {
//line pkg/server/json.qtpl:102
			isFirstRow = false

//line pkg/server/json.qtpl:103
		} else {
//line pkg/server/json.qtpl:103
			qw422016.N().S(`,`)
//line pkg/server/json.qtpl:105
		}
//line pkg/server/json.qtpl:105
		qw422016.N().S(`{"id":`)
//line pkg/server/json.qtpl:107
		qw422016.N().D(id)
//line pkg/server/json.qtpl:107
		qw422016.N().S(`,"name":`)
//line pkg/server/json.qtpl:108
		qw422016.N().Q(string(name))
//line pkg/server/json.qtpl:108
		qw422016.N().S(`}`)
//line pkg/server/json.qtpl:110
	}
//line pkg/server/json.qtpl:110
	qw422016.N().S(`]`)
//line pkg/server/json.qtpl:112
}

//line pkg/server/json.qtpl:112
func writewriteMachineInfoList(qq422016 qtio422016.Writer, statement *sqlite3.Stmt, errRef *error) {
//line pkg/server/json.qtpl:112
	qw422016 := qt422016.AcquireWriter(qq422016)
//line pkg/server/json.qtpl:112
	streamwriteMachineInfoList(qw422016, statement, errRef)
//line pkg/server/json.qtpl:112
	qt422016.ReleaseWriter(qw422016)
//line pkg/server/json.qtpl:112
}

//line pkg/server/json.qtpl:112
func writeMachineInfoList(statement *sqlite3.Stmt, errRef *error) string {
//line pkg/server/json.qtpl:112
	qb422016 := qt422016.AcquireByteBuffer()
//line pkg/server/json.qtpl:112
	writewriteMachineInfoList(qb422016, statement, errRef)
//line pkg/server/json.qtpl:112
	qs422016 := string(qb422016.B)
//line pkg/server/json.qtpl:112
	qt422016.ReleaseByteBuffer(qb422016)
//line pkg/server/json.qtpl:112
	return qs422016
//line pkg/server/json.qtpl:112
}
