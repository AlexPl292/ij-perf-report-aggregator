{% stripspace %}
{% func httpError(error *HttpError) %}
{
  "error": {%q= error.Message %}
}
{% endfunc %}

{% func GroupedMetricList(list []MedianResult) %}
{
  "groupNames": [
    {% if len(list) > 0 %}
      {% for i, value := range list[0].groupedValues %}
        {% if i != 0 %},{% endif %}
        "{%s= value.group %}"
      {% endfor %}
    {% endif %}
  ],
  "data": [
    {% for i, item := range list %}
      {% if i != 0 %},{% endif %}
      {
        {% for _, value := range item.groupedValues %}
        "{%s= value.group %}": {%d value.value %},
        {% endfor %}
        {% comment %}
          metric as last to avoid using any logic "should we print last comma or not"
        {% endcomment %}
        "metric": {%q= item.metricName %}
      }
    {% endfor %}
  ]
}
{% endfunc %}

{% func Info(productNames []string, essentialMetricNames []string, instantMetricNames []string, productNameToMachineNames map[string][]string) %}
{
  "productNames": {%= safeStringList(productNames) %},
  "durationMetricNames": [
    {% for i, name := range essentialMetricNames %}
      {% if i != 0 %},{% endif %}
      "{%s= name %}"
    {% endfor %}
  ],
  "instantMetricNames": [
    {% for i, name := range instantMetricNames %}
      {% if i != 0 %},{% endif %}
      "{%s= name %}"
    {% endfor %}
  ],
  "productToMachine": {
    {% for i, product := range productNames %}
      {% if i != 0 %},{% endif %}
      "{%s= product %}": {%= writeMachineInfoList(productNameToMachineNames[product]) %}
    {% endfor %}
  }
}
{% endfunc %}

{% func safeStringList(list []string) %}
[
  {% for i, v := range list %}
    {% if i != 0 %},{% endif %}
    "{%s= v %}"
  {% endfor %}
]
{% endfunc %}

{% func writeMachineInfoList(machines []string) %}
[
  {% for i, machine := range machines %}
    {% if i != 0 %},{% endif %}
    {%q= machine %}
  {% endfor %}
]
{% endfunc %}
{% endstripspace %}